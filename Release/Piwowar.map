Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                              ./1Wire/ds18x20.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                              ./MP_SSD1306/mp_ssd1306.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

gSensorIDs          0x20              ./1Wire/ds18x20.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
LOAD ./MP_SSD1306/mp_ssd1306.o
LOAD ./1Wire/crc8.o
LOAD ./1Wire/ds18x20.o
LOAD ./1Wire/onewire.o
LOAD ./fun.o
LOAD ./main.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xa5c
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.rinse
                0x00000054      0x120 ./fun.o
                0x00000054                rinse
                0x00000174                . = ALIGN (0x2)
                0x00000174                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000174        0x0 linker stubs
 *(.trampolines*)
                0x00000174                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000174                __ctors_start = .
 *(.ctors)
                0x00000174                __ctors_end = .
                0x00000174                __dtors_start = .
 *(.dtors)
                0x00000174                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000174        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000174                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000174        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000180       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                0x00000180                __do_copy_data
 .init4         0x00000196       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x00000196                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000001a6        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000001ae        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x000001ae                __vector_1
                0x000001ae                __vector_12
                0x000001ae                __bad_interrupt
                0x000001ae                __vector_6
                0x000001ae                __vector_3
                0x000001ae                __vector_11
                0x000001ae                __vector_13
                0x000001ae                __vector_17
                0x000001ae                __vector_19
                0x000001ae                __vector_7
                0x000001ae                __vector_5
                0x000001ae                __vector_4
                0x000001ae                __vector_9
                0x000001ae                __vector_2
                0x000001ae                __vector_15
                0x000001ae                __vector_8
                0x000001ae                __vector_14
                0x000001ae                __vector_10
                0x000001ae                __vector_16
                0x000001ae                __vector_18
                0x000001ae                __vector_20
 .text          0x000001b2        0x0 ./MP_SSD1306/mp_ssd1306.o
 .text          0x000001b2        0x0 ./1Wire/crc8.o
 .text          0x000001b2        0x0 ./1Wire/ds18x20.o
 .text          0x000001b2        0x0 ./1Wire/onewire.o
 .text          0x000001b2        0x0 ./fun.o
 .text          0x000001b2        0x0 ./main.o
 .text          0x000001b2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text          0x000001b2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text          0x000001b2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x000001b2                . = ALIGN (0x2)
 *(.text.*)
 .text.SPIwrite
                0x000001b2       0x20 ./MP_SSD1306/mp_ssd1306.o
 .text.ssd1306_InitSpi
                0x000001d2        0xe ./MP_SSD1306/mp_ssd1306.o
                0x000001d2                ssd1306_InitSpi
 .text.mp_ssd1306_cmd
                0x000001e0        0x6 ./MP_SSD1306/mp_ssd1306.o
                0x000001e0                mp_ssd1306_cmd
 .text.mp_ssd1306_data
                0x000001e6        0x6 ./MP_SSD1306/mp_ssd1306.o
                0x000001e6                mp_ssd1306_data
 .text.mp_ssd1306_display
                0x000001ec       0x30 ./MP_SSD1306/mp_ssd1306.o
                0x000001ec                mp_ssd1306_display
 .text.mp_ssd1306_setPixel
                0x0000021c       0x54 ./MP_SSD1306/mp_ssd1306.o
                0x0000021c                mp_ssd1306_setPixel
 .text.mp_ssd1306_cls
                0x00000270       0x16 ./MP_SSD1306/mp_ssd1306.o
                0x00000270                mp_ssd1306_cls
 .text.mp_ssd1306_init
                0x00000286      0x11c ./MP_SSD1306/mp_ssd1306.o
                0x00000286                mp_ssd1306_init
 .text.mp_ssd1306_drawBitmap_P
                0x000003a2      0x122 ./MP_SSD1306/mp_ssd1306.o
                0x000003a2                mp_ssd1306_drawBitmap_P
 .text.crc8     0x000004c4       0x32 ./1Wire/crc8.o
                0x000004c4                crc8
 .text.DS18X20_meas_to_cel
                0x000004f6       0xc8 ./1Wire/ds18x20.o
                0x000004f6                DS18X20_meas_to_cel
 .text.DS18X20_temp_cmp
                0x000005be       0x34 ./1Wire/ds18x20.o
                0x000005be                DS18X20_temp_cmp
 .text.DS18X20_find_sensor
                0x000005f2       0x32 ./1Wire/ds18x20.o
                0x000005f2                DS18X20_find_sensor
 .text.search_sensors
                0x00000624       0x86 ./1Wire/ds18x20.o
                0x00000624                search_sensors
 .text.DS18X20_get_power_status
                0x000006aa       0x34 ./1Wire/ds18x20.o
                0x000006aa                DS18X20_get_power_status
 .text.DS18X20_start_meas
                0x000006de       0x3e ./1Wire/ds18x20.o
                0x000006de                DS18X20_start_meas
 .text.DS18X20_read_meas
                0x0000071c       0xbc ./1Wire/ds18x20.o
                0x0000071c                DS18X20_read_meas
 .text.DS18X20_read_meas_single
                0x000007d8       0xb8 ./1Wire/ds18x20.o
                0x000007d8                DS18X20_read_meas_single
 .text.ow_input_pin_state
                0x00000890        0x6 ./1Wire/onewire.o
                0x00000890                ow_input_pin_state
 .text.ow_parasite_enable
                0x00000896        0x6 ./1Wire/onewire.o
                0x00000896                ow_parasite_enable
 .text.ow_parasite_disable
                0x0000089c        0x6 ./1Wire/onewire.o
                0x0000089c                ow_parasite_disable
 .text.ow_reset
                0x000008a2       0x34 ./1Wire/onewire.o
                0x000008a2                ow_reset
 .text.ow_bit_io
                0x000008d6       0x28 ./1Wire/onewire.o
                0x000008d6                ow_bit_io
 .text.ow_byte_wr
                0x000008fe       0x22 ./1Wire/onewire.o
                0x000008fe                ow_byte_wr
 .text.ow_byte_rd
                0x00000920        0x6 ./1Wire/onewire.o
                0x00000920                ow_byte_rd
 .text.ow_rom_search
                0x00000926       0x98 ./1Wire/onewire.o
                0x00000926                ow_rom_search
 .text.ow_command
                0x000009be       0x46 ./1Wire/onewire.o
                0x000009be                ow_command
 .text.mp_rinse
                0x00000a04       0x44 ./fun.o
                0x00000a04                mp_rinse
 .text.startup.main
                0x00000a48       0x10 ./main.o
                0x00000a48                main
 .text.libgcc.mul
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x00000a58                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000a58        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x00000a58                _exit
                0x00000a58                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000a58        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000a5c                _etext = .

.data           0x00800060       0x10 load address 0x00000a5c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MP_SSD1306/mp_ssd1306.o
 .data          0x00800060        0x0 ./1Wire/crc8.o
 .data          0x00800060        0x0 ./1Wire/ds18x20.o
 .data          0x00800060        0x0 ./1Wire/onewire.o
 .data          0x00800060        0x0 ./fun.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x00800060       0x10 ./1Wire/ds18x20.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800070                . = ALIGN (0x2)
                0x00800070                _edata = .
                0x00800070                PROVIDE (__data_end, .)

.bss            0x00800070      0x420
                0x00800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800070        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800070        0x0 ./MP_SSD1306/mp_ssd1306.o
 .bss           0x00800070        0x0 ./1Wire/crc8.o
 .bss           0x00800070        0x0 ./1Wire/ds18x20.o
 .bss           0x00800070        0x0 ./1Wire/onewire.o
 .bss           0x00800070        0x0 ./fun.o
 .bss           0x00800070        0x0 ./main.o
 .bss           0x00800070        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800070        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.ssd1306_buf
                0x00800070      0x400 ./MP_SSD1306/mp_ssd1306.o
                0x00800070                ssd1306_buf
 *(COMMON)
 COMMON         0x00800470       0x20 ./1Wire/ds18x20.o
                0x00800470                gSensorIDs
                0x00800490                PROVIDE (__bss_end, .)
                0x00000a5c                __data_load_start = LOADADDR (.data)
                0x00000a6c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800490        0x0
                0x00800490                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800490                PROVIDE (__noinit_end, .)
                0x00800490                _end = .
                0x00800490                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./MP_SSD1306/mp_ssd1306.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./1Wire/crc8.o
 .comment       0x00000000       0x30 ./1Wire/ds18x20.o
 .comment       0x00000000       0x30 ./1Wire/onewire.o
 .comment       0x00000000       0x30 ./fun.o
 .comment       0x00000000       0x30 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Piwowar.elf elf32-avr)
LOAD linker stubs
